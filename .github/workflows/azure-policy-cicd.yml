name: Azure Policy CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'policies/**'
      - 'tests/**'
      - 'scripts/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'policies/**'
      - 'tests/**'
      - 'scripts/**'

env:
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

jobs:
  validate:
    name: Validate Policies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup PowerShell
      shell: pwsh
      run: |
        Install-Module -Name Az -Force -AllowClobber -Scope CurrentUser
        Install-Module -Name Pester -Force -Scope CurrentUser
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Validate Policy Syntax
      shell: pwsh
      run: |
        ./scripts/Test-PolicyDefinitions.ps1
    
    - name: Run Unit Tests
      shell: pwsh
      run: |
        Invoke-Pester -Path "./tests/unit" -OutputFormat NUnitXml -OutputFile "test-results.xml"
    
    - name: Publish Test Results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Policy Tests
        path: test-results.xml
        reporter: dotnet-trx

  deploy-dev:
    name: Deploy to Development
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/develop'
    environment: development
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup PowerShell
      shell: pwsh
      run: |
        Install-Module -Name Az -Force -AllowClobber -Scope CurrentUser
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy Policy Definitions
      shell: pwsh
      run: |
        ./scripts/Deploy-PolicyDefinitions.ps1 -SubscriptionId ${{ env.AZURE_SUBSCRIPTION_ID }}

  deploy-prod:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup PowerShell
      shell: pwsh
      run: |
        Install-Module -Name Az -Force -AllowClobber -Scope CurrentUser
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy Policy Definitions
      shell: pwsh
      run: |
        ./scripts/Deploy-PolicyDefinitions.ps1 -SubscriptionId ${{ env.AZURE_SUBSCRIPTION_ID }}
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Policy Release v${{ github.run_number }}
        body: |
          Azure Policy deployment completed successfully.
          
          Changes in this release:
          ${{ github.event.head_commit.message }}
        draft: false
        prerelease: false